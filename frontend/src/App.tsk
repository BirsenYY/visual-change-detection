import React, { useMemo, useState } from 'react'

const API_BASE = import.meta.env.VITE_API_BASE || 'http://localhost:8000'

export default function App() {
  const [before, setBefore] = useState<File | null>(null)
  const [after, setAfter] = useState<File | null>(null)
  const [sensitivityPct, setSensitivityPct] = useState<number>(10) // 0..100 (mapped to 0..255)
  const [loading, setLoading] = useState(false)
  const [result, setResult] = useState<any>(null)
  const [error, setError] = useState<string | null>(null)

  // Map 0..100 slider to 0..255 threshold (lower threshold => more sensitive)
  const threshold = useMemo(() => Math.round((sensitivityPct / 100) * 255), [sensitivityPct])

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setError(null)
    if (!before || !after) {
      setError('Please select both images.')
      return
    }
    setLoading(true)
    try {
      const form = new FormData()
      form.append('before', before)
      form.append('after', after)
      form.append('threshold', String(threshold))

      const res = await fetch(`${API_BASE}/comparison`, { method: 'POST', body: form })
      if (!res.ok) throw new Error(await res.text())
      const json = await res.json()
      setResult(json)
    } catch (err: any) {
      setError(err.message || 'Request failed')
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="container">
      <h1>üîç Visual Diff</h1>
      <p className="subtle">Upload two screenshots to see what's changed. Move the slider to tune sensitivity.</p>

      <form className="card" onSubmit={onSubmit}>
        <div className="row">
          <div>
            <label className="label">Before image</label>
            <input type="file" accept="image/*" onChange={e => setBefore(e.target.files?.[0] ?? null)} />
          </div>
          <div>
            <label className="label">After image</label>
            <input type="file" accept="image/*" onChange={e => setAfter(e.target.files?.[0] ?? null)} />
          </div>
        </div>

        <div style={{ marginTop: 16 }}>
          <label className="label">Sensitivity: {sensitivityPct}% (threshold {threshold})</label>
          <input
            className="slider"
            type="range"
            min={0}
            max={100}
            value={sensitivityPct}
            onChange={e => setSensitivityPct(Number(e.target.value))}
          />
        </div>

        <div style={{ marginTop: 16, display: 'flex', gap: 8 }}>
          <button type="submit" disabled={loading}>{loading ? 'Comparing‚Ä¶' : 'Compare'}</button>
          {result?.id && (
            <a className="url" href={`${API_BASE}/comparison/${result.id}`} target="_blank">GET /comparison/{result.id}</a>
          )}
        </div>
      </form>

      {error && <div className="card" style={{ marginTop: 16, borderColor: '#7f1d1d', color: '#fecaca' }}>‚ö†Ô∏è {error}</div>}

      {result && (
        <div className="card" style={{ marginTop: 16 }}>
          <div style={{ display: 'flex', alignItems: 'baseline', gap: 10 }}>
            <div className="score">{result.difference_percent?.toFixed?.(2)}%</div>
            <div className="subtle">difference</div>
          </div>
          <div className="img-grid">
            <figure>
              <img src={`${API_BASE}${result.assets.before_url}`} alt="before" />
              <figcaption className="subtle">Before</figcaption>
            </figure>
            <figure>
              <img src={`${API_BASE}${result.assets.after_url}`} alt="after" />
              <figcaption className="subtle">After</figcaption>
            </figure>
            <figure>
              <img src={`${API_BASE}${result.assets.diff_url}`} alt="diff" />
              <figcaption className="subtle">Diff (red = change)</figcaption>
            </figure>
          </div>
        </div>
      )}
    </div>
  )
}